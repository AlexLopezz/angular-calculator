{"version":3,"sources":["webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/components/login/login.component.css","webpack:///./src/app/auth/components/login/login.component.html","webpack:///./src/app/auth/components/login/login.component.ts","webpack:///./src/app/auth/components/register/register.component.css","webpack:///./src/app/auth/components/register/register.component.html","webpack:///./src/app/auth/components/register/register.component.ts","webpack:///./src/app/auth/pages/auth.component.css","webpack:///./src/app/auth/pages/auth.component.html","webpack:///./src/app/auth/pages/auth.component.ts","webpack:///./src/app/shared/services/validator/validator-service.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AACA;AAEvD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mEAAa,EAAE;CACvC,CAAC;AAMF;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAJ7B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZW;AACM;AACM;AAEK;AACU;AACS;AACtB;AAUvD;IAAA;IAA0B,CAAC;IAAd,UAAU;QARtB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,sEAAiB;gBACjB,kEAAmB;aACpB;YACD,YAAY,EAAE,CAAC,mEAAa,EAAE,gFAAc,EAAE,yFAAiB,CAAC;SACjE,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;ACjBvB,2BAA2B,yBAAyB,kBAAkB,yBAAyB,4BAA4B,yBAAyB,sBAAsB,sBAAsB,qCAAqC,uBAAuB,KAAK,qBAAqB,+BAA+B,KAAK,oBAAoB,4CAA4C,0BAA0B,0BAA0B,8BAA8B,KAAK,sBAAsB,oCAAoC,mBAAmB,kBAAkB,gCAAgC,mBAAmB,KAAK,gBAAgB,sBAAsB,wBAAwB,gCAAgC,KAAK,iBAAiB,uBAAuB,wBAAwB,KAAK,gBAAgB,4CAA4C,yBAAyB,kBAAkB,yBAAyB,4BAA4B,yBAAyB,2CAA2C,0BAA0B,sBAAsB,sBAAsB,sCAAsC,8BAA8B,uBAAuB,KAAK,sBAAsB,qCAAqC,gCAAgC,+BAA+B,KAAK,C;;;;;;;;;;;ACArxC,q2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA8D;AACM;AAE3B;AACgC;AAEsB;AAO/F;IAWE,wBACU,WAAuB,EACvB,IAAgB,EAChB,MAAa,EACb,SAA0B;QAH1B,gBAAW,GAAX,WAAW,CAAY;QACvB,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAO;QACb,cAAS,GAAT,SAAS,CAAiB;QAd1B,yBAAoB,GAAG,IAAI,0DAAY,EAAW,CAAC;QAKtD,cAAS,GAAa,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAClD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;IAOC,CAAC;IAbL,yCAAgB,GAAhB;QACE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAaM,qCAAY,GAAnB,UAAqB,SAAmB,EAAE,KAAY;QACpD,OAAO,IAAI,CAAC,SAAS,CAAC,cAAc,CAAE,SAAS,EAAE,KAAK,CAAE,CAAC;IAC3D,CAAC;IAEM,gCAAO,GAAd;QAAA,iBAwBD;QAvBG,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO;YAAG,OAAO;QACpC,IAAM,IAAI,GAAmB,IAAI,CAAC,SAAS,CAAC,KAAwB,CAAC;QACrE,OAAO,CAAC,GAAG,CAAE,IAAI,CAAE,CAAC;QAEpB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE;aACpB,SAAS,CAAE,kBAAQ;YAClB,IAAM,QAAQ,GAAiB;gBAC7B,MAAM,EAAE,QAAQ,CAAC,MAAM;gBACvB,SAAS,EAAE,QAAQ,CAAC,SAAS;aAC9B;YACD,OAAO,CAAC,GAAG,CAAE,QAAQ,CAAE,CAAC;YACxB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAE,QAAQ,CAAE,CAAC,CAAC;YAC7D,KAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QAC3C,CAAC,EACD,eAAK;YACH,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBACxB,wDAAwD;gBACxD,KAAK,CAAC,qDAAqD,CAAC,CAAC;aAC9D;iBAAM;gBACL,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;aACvD;QACH,CAAC,CACF,CAAC;IACN,CAAC;IA7CW;QAAT,4DAAM,EAAE;;gEAAoD;IADlD,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAasB,0DAAW;YAClB,8EAAW;YACT,sDAAM;YACH,4GAAgB;OAfzB,cAAc,CA+C1B;IAAD,qBAAC;CAAA;AA/C0B;;;;;;;;;;;;ACb3B,2BAA2B,yBAAyB,kBAAkB,yBAAyB,4BAA4B,yBAAyB,sBAAsB,sBAAsB,qCAAqC,uBAAuB,KAAK,qBAAqB,+BAA+B,KAAK,oBAAoB,4CAA4C,0BAA0B,0BAA0B,8BAA8B,KAAK,sBAAsB,oCAAoC,mBAAmB,kBAAkB,gCAAgC,mBAAmB,KAAK,gBAAgB,sBAAsB,wBAAwB,gCAAgC,KAAK,iBAAiB,uBAAuB,wBAAwB,KAAK,gBAAgB,4CAA4C,yBAAyB,kBAAkB,yBAAyB,4BAA4B,yBAAyB,2CAA2C,0BAA0B,sBAAsB,sBAAsB,sCAAsC,8BAA8B,uBAAuB,KAAK,sBAAsB,qCAAqC,gCAAgC,+BAA+B,KAAK,C;;;;;;;;;;;ACArxC,w7B;;;;;;;;;;;;;;;;;;;;;;;;;;ACAgE;AACI;AAEK;AAOzE;IAeE,2BACU,WAAuB,EACvB,IAAgB;QADhB,gBAAW,GAAX,WAAW,CAAY;QACvB,SAAI,GAAJ,IAAI,CAAY;QAhBhB,sBAAiB,GAAG,IAAI,0DAAY,EAAW,CAAC;QAChD,yBAAoB,GAAG,IAAI,0DAAY,EAAW,CAAC;QAEtD,eAAU,GAAa,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACnD,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAClC,CAMF,CAAC;IAKE,CAAC;IAEL,oCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO;YAAG,OAAO;QAE/B,8BAA8C,EAA5C,sBAAQ,EAAE,sBAAQ,CAA2B;QACrD,IAAM,IAAI,GAAmB,EAAE,QAAQ,YAAE,QAAQ,YAAE,CAAC;QAGpD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAE,IAAI,CAAE;aACrB,SAAS,CAAE;YACV,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,CAAC,CACF,CAAC;IACJ,CAAC;IACD,4CAAgB,GAAhB;QACE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IAlCS;QAAT,4DAAM,EAAE;;gEAAiD;IAChD;QAAT,4DAAM,EAAE;;mEAAoD;IAFlD,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAiBsB,0DAAW;YAClB,8EAAW;OAjBf,iBAAiB,CAqC7B;IAAD,wBAAC;CAAA;AArC6B;;;;;;;;;;;;ACV9B,8BAA8B,qBAAqB,mBAAmB,uBAAuB,8BAA8B,wBAAwB,8BAA8B,iBAAiB,GAAG,qBAAqB,uBAAuB,wBAAwB,GAAG,G;;;;;;;;;;;ACA5Q,2EAA2E,+V;;;;;;;;;;;;;;;;;;;;;;;;ACAf;AAO5D;IAGE;QAFO,mBAAc,GAAG,IAAI,CAAC;IAGzB,CAAC;IAEL,yCAAiB,GAAjB,UAAmB,eAAuB;QACxC,IAAI,CAAC,cAAc,GAAG,CAAC,eAAe,CAAC;IACzC,CAAC;IACD,0CAAkB,GAAlB,UAAmB,cAAuB;QACxC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;IAC7B,CAAC;IAZU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAczB;IAAD,oBAAC;CAAA;AAdyB;;;;;;;;;;;;;;;;;;;;;;;;;ACPiB;AAM3C;IAEE;IAAgB,CAAC;IAEV,yCAAc,GAArB,UAAuB,IAAc,EAAE,KAAY;QACjD,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,MAAM;eAC7B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;IACpC,CAAC;IACM,sCAAW,GAAlB,UAAoB,IAAc,IAAY,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IARzD,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,gBAAgB,CAyB5B;IAAD,uBAAC;CAAA;AAzB4B","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent } from './pages/auth.component';\n\nconst routes: Routes = [\n  { path: '', component: AuthComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AuthComponent } from './pages/auth.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [AuthComponent ,LoginComponent, RegisterComponent]\n})\nexport class AuthModule { }\n","module.exports = \"\\n.login{\\n    padding: 10px 20px;\\n    margin: 5px;\\n    border-radius: 5px;\\n    display: inline-block;\\n    text-align: center;\\n    font-size: 16px;\\n    cursor: pointer;\\n    transition: outline-width 0.1s;\\n    font-weight: 400;\\n  }\\n  \\n  .login:hover{\\n    outline: 3px solid white;\\n  }\\n  \\n  .form-group{\\n    outline: 1px solid rgb(177, 177, 177);\\n    border-radius: 10px;\\n    margin-bottom: 10px;\\n    padding: 0.3rem 0.75rem;\\n  }\\n  \\n  .form-control{\\n    background-color: transparent;\\n    border: none;\\n    width: 100%;\\n    color: rgb(184, 184, 184);\\n    height: 35px;\\n  }\\n  \\n  .labels{\\n    font-size: 14px;\\n    font-weight: bold;\\n    color: rgb(145, 145, 145);\\n  }\\n  \\n  .buttons{\\n    margin-top: 25px;\\n    text-align: right;\\n  }\\n  \\n  .signup{\\n    outline: 1px solid rgb(255, 255, 255);\\n    padding: 10px 20px;\\n    margin: 5px;\\n    border-radius: 5px;\\n    display: inline-block;\\n    text-align: center;\\n    background-color: rgb(255, 255, 255);\\n    color: rgb(0, 0, 0);\\n    font-size: 16px;\\n    cursor: pointer;\\n    transition: outline-width 0.1s ;\\n    border: 1px solid white;\\n    font-weight: 500;\\n  }\\n  \\n  .signup:hover{\\n    background-color: rgb(0, 0, 0);\\n    color: rgb(255, 255, 255);\\n    outline: 3px solid white;\\n  }\"","module.exports = \"<div class=\\\"card-header\\\">\\n  <h2 class=\\\"text-center\\\">Login</h2>\\n</div>\\n<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"doLogin()\\\" autocomplete=\\\"off\\\">\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"labels\\\" for=\\\"username\\\">Username</label>\\n    <input\\n      type=\\\"text\\\"\\n      class=\\\"form-control\\\"\\n      id=\\\"username\\\"\\n      formControlName=\\\"username\\\"\\n      placeholder=\\\"Username\\\"\\n    />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label class=\\\"labels\\\" for=\\\"password\\\">Password</label>\\n    <input\\n      type=\\\"password\\\"\\n      class=\\\"form-control\\\"\\n      id=\\\"password\\\"\\n      formControlName=\\\"password\\\"\\n      placeholder=\\\"Password\\\"\\n    />\\n  </div>\\n  <div class=\\\"buttons\\\">\\n    <a class=\\\"login\\\" (click)=\\\"toggleSignupForm()\\\"> Signup </a>\\n    <button class=\\\"signup\\\">Login</button>\\n  </div>\\n</form>\\n\"","import { Component,Output,EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserAuthRequest } from '../../interfaces/user.interface';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../shared/services/auth/auth.service';\nimport { HeaderRequest } from 'src/app/shared/interfaces/global.interface';\nimport { ValidatorService } from 'src/app/shared/services/validator/validator-service.service';\n\n@Component({\n  selector: 'auth-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  @Output() showSignupFormChange = new EventEmitter<boolean>();\n\n  toggleSignupForm() {\n    this.showSignupFormChange.emit(true);\n  }\n  public loginForm:FormGroup = this.formBuilder.group({\n    username: ['', [Validators.required]],\n    password: ['', Validators.required]\n  });\n\n  constructor( \n    private formBuilder:FormBuilder,\n    private auth:AuthService,\n    private router:Router,\n    private validator:ValidatorService \n  ) { }\n\n  public isValidField( formLogin:FormGroup, field:string ):boolean {\n    return this.validator.isInvalidField( formLogin, field );\n  }\n\n  public doLogin():void {\n    if( this.loginForm.invalid ) return;\n    const user:UserAuthRequest = this.loginForm.value as UserAuthRequest; \n    console.log( user );\n\n    this.auth.login( user )\n      .subscribe( response => {\n        const userData:HeaderRequest = {\n          userID: response.userId,\n          sessionID: response.sessionId\n        }\n        console.log( userData );\n        localStorage.setItem('userData', JSON.stringify( userData ));\n        this.router.navigateByUrl('/calculator');\n      },\n      error => {\n        if (error.status === 404) {\n          // Mostrar una alerta de JavaScript con mensaje de error\n          alert('Error en el inicio de sesión: Usuario no registrado');\n        } else {\n          console.error('Error en el inicio de sesión:', error);\n        }\n      }\n    );\n}\n}","module.exports = \"\\n.login{\\n    padding: 10px 20px;\\n    margin: 5px;\\n    border-radius: 5px;\\n    display: inline-block;\\n    text-align: center;\\n    font-size: 16px;\\n    cursor: pointer;\\n    transition: outline-width 0.1s;\\n    font-weight: 400;\\n  }\\n  \\n  .login:hover{\\n    outline: 3px solid white;\\n  }\\n  \\n  .form-group{\\n    outline: 1px solid rgb(177, 177, 177);\\n    border-radius: 10px;\\n    margin-bottom: 10px;\\n    padding: 0.3rem 0.75rem;\\n  }\\n  \\n  .form-control{\\n    background-color: transparent;\\n    border: none;\\n    width: 100%;\\n    color: rgb(184, 184, 184);\\n    height: 35px;\\n  }\\n  \\n  .labels{\\n    font-size: 14px;\\n    font-weight: bold;\\n    color: rgb(145, 145, 145);\\n  }\\n  \\n  .buttons{\\n    margin-top: 25px;\\n    text-align: right;\\n  }\\n  \\n  .signup{\\n    outline: 1px solid rgb(255, 255, 255);\\n    padding: 10px 20px;\\n    margin: 5px;\\n    border-radius: 5px;\\n    display: inline-block;\\n    text-align: center;\\n    background-color: rgb(255, 255, 255);\\n    color: rgb(0, 0, 0);\\n    font-size: 16px;\\n    cursor: pointer;\\n    transition: outline-width 0.1s ;\\n    border: 1px solid white;\\n    font-weight: 500;\\n  }\\n  \\n  .signup:hover{\\n    background-color: rgb(0, 0, 0);\\n    color: rgb(255, 255, 255);\\n    outline: 3px solid white;\\n  }\"","module.exports = \"<div class=\\\"card-header\\\">\\n  <h2 class=\\\"text-center\\\">Register</h2>\\n</div>\\n<form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"onSignUp()\\\" autocomplete=\\\"off\\\">\\n  <div class=\\\"form-group\\\">\\n    <div>\\n      <label class=\\\"labels\\\" for=\\\"signup-username\\\">Username</label>\\n    </div>\\n    <input\\n      type=\\\"text\\\"\\n      class=\\\"form-control\\\"\\n      id=\\\"signup-username\\\"\\n      formControlName=\\\"username\\\"\\n      placeholder=\\\"Username\\\"\\n    />\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <div>\\n      <label class=\\\"labels\\\" for=\\\"signup-password\\\">Password</label>\\n    </div>\\n    <input\\n      type=\\\"password\\\"\\n      class=\\\"form-control\\\"\\n      id=\\\"signup-password\\\"\\n      formControlName=\\\"password\\\"\\n      placeholder=\\\"Password\\\"\\n    />\\n  </div>\\n  <div class=\\\"buttons\\\">\\n    <a class=\\\"login\\\" (click)=\\\"toggleSignupForm()\\\">Login</a>\\n    <button class=\\\"signup\\\">Register</button>\\n  </div>\\n</form>\\n\"","import { Component, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserAuthRequest } from '../../interfaces/user.interface';\nimport { AuthService } from '../../../shared/services/auth/auth.service';\n\n@Component({\n  selector: 'auth-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  @Output() onRegisterSuccess = new EventEmitter<boolean>();\n  @Output() showSignupFormChange = new EventEmitter<boolean>();\n\n  public signUpForm:FormGroup = this.formBuilder.group({\n    username: ['', Validators.required],\n    password: ['', Validators.required]\n    },\n    // { \n    //   validators: [\n    //     this.validator.isFieldEqualsTo( 'password', 'confirmPassword' ),\n    //   ]\n    // }\n  );\n\n  constructor(\n    private formBuilder:FormBuilder,\n    private auth:AuthService,\n  ) { }\n\n  onSignUp():void {\n    if( this.signUpForm.invalid ) return;\n\n    const { username, password } = this.signUpForm.value;\n    const user:UserAuthRequest = { username, password };\n\n\n    this.auth.signup( user )\n      .subscribe( () => {\n        this.onRegisterSuccess.emit(true);\n      }\n    );\n  }\n  toggleSignupForm() {\n    this.showSignupFormChange.emit(false);\n  }\n\n}\n","module.exports = \".container {\\n  max-width: 25rem;\\n  margin: 0 auto;\\n  padding: 15px 30px;\\n  border: 1px solid #ffffff;\\n  border-radius: 10px;\\n  background-color: #000000;\\n  color: white;\\n}\\n  \\n.container h2 {\\n  text-align: center;\\n  margin-bottom: 20px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div *ngIf=\\\"showSignupForm; else showLogin\\\" class=\\\"card-body\\\">\\n    <auth-register (onRegisterSuccess)=\\\"onRegisterSuccess($event)\\\" (showSignupFormChange)=\\\"onToggleSignupForm($event)\\\"></auth-register>\\n  </div>\\n  <ng-template #showLogin>\\n    <auth-login class=\\\"card-body\\\" (showSignupFormChange)=\\\"onToggleSignupForm($event)\\\"></auth-login>\\n  </ng-template>\\n</div>\\n\"","import { Component,ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent {\n  public showSignupForm = true;\n\n  constructor(\n  ) { }\n\n  onRegisterSuccess( registerSuccess:boolean ){\n    this.showSignupForm = !registerSuccess;\n  }\n  onToggleSignupForm(showSignupForm: boolean) {\n    this.showSignupForm = showSignupForm;\n    console.log(showSignupForm)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup, ValidationErrors } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidatorService {\n\n  constructor() { }\n\n  public isInvalidField( form:FormGroup, field:string ){\n    return form.controls[field].errors \n      && form.controls[field].touched;\n  }\n  public isValidForm( form:FormGroup ):boolean{ return form.invalid; }\n\n  // public isFieldEqualsTo( currentField:string, fieldToCompare:string ):ValidationErrors | null {\n  //   return ( form:FormGroup ):ValidationErrors | null => {\n      \n  //     const field = form.get(currentField)?.value;\n  //     const field2 = form.get(fieldToCompare)?.value;\n\n  //     if( field !== field2 ){\n  //         form.get(field2)?.setErrors({ notEquals: true });\n  //         return { notEquals: true };\n  //     }\n  \n  //     form.get(field2)?.setErrors(null);\n  //     return null;\n  //   } \n  // }\n}\n"],"sourceRoot":""}